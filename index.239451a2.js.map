{"mappings":"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","sources":["config.json","src/get-new-url.js","src/index.js"],"sourcesContent":["{\n  \"basepath\": \"?\",\n  \"interproURL\": \"https://www.ebi.ac.uk/interpro\",\n  \"legacyURL\": \"http://pfamdev-legacy.xfam.org\",\n  \"ebiSearchURL\": \"https://www.ebi.ac.uk/ebisearch/ws/rest/interpro7\",\n  \"test\": true\n}","import { interproURL } from \"../config.json\";\n\nexport const pfamAccessionRegex = /pf\\d{5}(\\.\\d+)?$/i;\nexport const clanAccessionRegex = /cl\\d{4}$/i;\nexport const pdbAccessionRegex = /[a-zA-Z\\d]{4}$/i;\nexport const uniprotAccessionRegex =\n  /[OPQ][0-9][A-Z0-9]{3}[0-9]|[A-NR-Z][0-9]([A-Z][A-Z0-9]{2}[0-9]){1,2}$/i;\n\nconst checkAPI = async (type, term) => {\n  let checkURL = null;\n  let targetURL = null;\n  switch (type) {\n    case \"entry\":\n      checkURL = `${ebiSearchURL}?query=(source_database:%22pfam%22)%20AND%20(short_name:%22${term}%22)&format=json`;\n      targetURL = `${interproURL}/entry/pfam/`;\n      break;\n    case \"protein\":\n      checkURL = `${interproURL}/api/protein/uniprot/${term}`;\n      targetURL = `${interproURL}/protein/uniprot/`;\n      break;\n    case \"clan\":\n      checkURL = `${interproURL}/api/set/pfam?search=${term}`;\n      targetURL = `${interproURL}/set/pfam/`;\n      break;\n  }\n  if (checkURL === null) return null;\n  const response = await fetch(checkURL);\n  if (response.ok) {\n    const payload = await response.json();\n    if ((payload?.results?.length || 0) > 0) {\n      return `${targetURL}${payload.results[0].metadata.accession}`;\n    }\n    if (payload?.metadata?.accession) {\n      return `${targetURL}${payload.metadata.accession}`;\n    }\n    if (payload?.entries?.[0]?.id) {\n      return `${targetURL}${payload.entries[0].id}`;\n    }\n  }\n  return null;\n};\n\nconst getNewURL = (urlParts) => {\n  let newURL = null;\n\n  switch (urlParts[0].toLowerCase()) {\n    case \"family\":\n      if (pfamAccessionRegex.test(urlParts?.[1])) {\n        newURL = `${interproURL}/entry/pfam/${urlParts[1]?.split(\".\")[0]}`;\n      } else if (urlParts?.[1] === \"browse\") {\n        newURL = `${interproURL}/entry/pfam/`;\n      } else if (urlParts?.[1].length > 0) {\n        newURL = checkAPI(\"entry\", urlParts[1]);\n      }\n      break;\n    case \"protein\":\n      if (uniprotAccessionRegex.test(urlParts[1])) {\n        newURL = `${interproURL}/protein/uniprot/${urlParts[1]}`;\n      } else {\n        newURL = checkAPI(\"protein\", urlParts[1]);\n      }\n      break;\n    case \"clan\":\n      if (clanAccessionRegex.test(urlParts[1])) {\n        newURL = `${interproURL}/set/pfam/${urlParts[1]}`;\n      } else if (urlParts?.[1] === \"browse\") {\n        newURL = `${interproURL}/set/pfam/`;\n      } else if (urlParts?.[1].length > 0) {\n        newURL = checkAPI(\"clan\", urlParts[1]);\n      }\n      break;\n    case \"proteome\":\n      if (!urlParts?.[1] && url.searchParams.get(\"taxId\")) {\n        newURL = `${interproURL}/taxonomy/uniprot/${url.searchParams.get(\n          \"taxId\"\n        )}/entry/pfam/`;\n      } else if (urlParts?.[1] === \"browse\") {\n        newURL = `${interproURL}/taxonomy/uniprot/entry/pfam/`;\n      }\n      break;\n    case \"structure\":\n      if (pdbAccessionRegex.test(urlParts[1])) {\n        newURL = `${interproURL}/structure/pdb/${urlParts[1]}`;\n      }\n      break;\n    case \"browse\":\n      newURL = `${interproURL}/entry/pfam`;\n      break;\n    case \"search\":\n      switch (url.hash) {\n        case \"#tabview=tab0\":\n        case \"#searchSequenceBlock\":\n          newURL = `${interproURL}/search/sequence/`;\n          break;\n        case \"#tabview=tab2\":\n        case \"#searchKeywordBlock\":\n          newURL = `${interproURL}/search/text/`;\n          break;\n        case \"#tabview=tab3\":\n        case \"#searchDomainBlock\":\n          newURL = `${interproURL}/search/ida/`;\n          break;\n        case \"#tabview=tab\":\n        case \"#searchTaxBlock\":\n          newURL = `${interproURL}/taxonomy/uniprot/entry/pfam/`;\n          break;\n      }\n  }\n  return newURL;\n};\n\nexport default getNewURL;\n","import { interproURL, legacyURL, test, basepath } from \"../config.json\";\nimport getNewURL from \"./get-new-url\";\n\nconst url = new URL(document.location.href);\nlet pathname = url.pathname;\nif (url.pathname.startsWith(basepath)) {\n  pathname = url.pathname.slice(basepath.length);\n} else if (basepath === \"?\") {\n  pathname = url.search.slice(2);\n} else {\n  console.error(\"the pathname doesn't start with the given base path\");\n}\nconst urlParts = pathname.split(\"/\");\n\nlet newURL = getNewURL(urlParts);\n\nif (newURL) {\n  document.querySelector(\".redirect\").classList.add(\"show\");\n\n  let seqLeft = 5;\n  let playing = true;\n\n  const counterID = setInterval(() => {\n    if (!playing) return;\n    seqLeft = Math.max(seqLeft - 1, 0);\n    document\n      .querySelectorAll(\".sec-left\")\n      .forEach((element) => (element.innerHTML = seqLeft));\n    if (seqLeft === 0) {\n      if (test) console.log(newURL);\n      else window.location.replace(newURL);\n      clearInterval(counterID);\n    }\n  }, 1000);\n\n  const setNewURL = (theNewURL) => {\n    if (theNewURL === null) {\n      theNewURL = urlParts?.[1]\n        ? `${interproURL}/search/text/${urlParts[1]}`\n        : interproURL;\n    }\n    const iproLink = document.getElementById(\"linkToInterPro\");\n    iproLink.setAttribute(\"href\", theNewURL);\n    iproLink.innerHTML = theNewURL;\n    newURL = theNewURL;\n  };\n\n  const svg = document.getElementById(\"countdown\");\n  svg.addEventListener(\"click\", () => {\n    playing = !playing;\n    if (playing) {\n      svg.classList.remove(\"paused\");\n    } else {\n      svg.classList.add(\"paused\");\n    }\n  });\n\n  if (typeof newURL?.then === \"function\") {\n    newURL.then((theNewURL) => setNewURL(theNewURL));\n  } else {\n    setNewURL(newURL);\n  }\n\n  const legacyNewURL = `${legacyURL}/${pathname}${url.search ?? \"\"}`;\n  const legacyLink = document.getElementById(\"linkToLegacy\");\n  legacyLink.setAttribute(\"href\", legacyNewURL);\n  legacyLink.innerHTML = legacyNewURL;\n} else {\n  document.querySelector(\".fake-home\").classList.add(\"show\");\n}\n"],"names":["$16cd91e743f4006e$exports","JSON","parse","$33b4a799b7dd9b4c$export$bb3fcfacbdd848d1","$33b4a799b7dd9b4c$export$eb2a3bf8d4f0e239","$33b4a799b7dd9b4c$export$f04325e91b3c683e","$33b4a799b7dd9b4c$export$44dca26e77862aa3","$33b4a799b7dd9b4c$var$checkAPI","async","type","term","checkURL","targetURL","ebiSearchURL","interproURL","response","fetch","ok","payload","json","results","length","metadata","accession","entries","id","$33b4a799b7dd9b4c$export$2e2bcd8739ae039","urlParts","newURL","toLowerCase","test","split","url","searchParams","get","hash","$35da740d59af89ba$var$url","URL","document","location","href","$35da740d59af89ba$var$pathname","pathname","startsWith","basepath","slice","search","console","error","$35da740d59af89ba$var$urlParts","$35da740d59af89ba$var$newURL","querySelector","classList","add","seqLeft","playing","counterID","setInterval","Math","max","querySelectorAll","forEach","element","innerHTML","log","window","replace","clearInterval","setNewURL","theNewURL","iproLink","getElementById","setAttribute","svg","addEventListener","remove","then","legacyNewURL","legacyURL","legacyLink"],"version":3,"file":"index.239451a2.js.map"}